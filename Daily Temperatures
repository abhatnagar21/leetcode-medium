class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& T) {
       /* // support variables
        int len = t.size();
        stack<int> s;
        s.push(len - 1);
        vector<int> res(len);
        // looping from right to left, starting from the penultimate element
        for (int i = len - 2, n; i >=0; --i) {
            n = t[i];
            // removing all the indexes stacked before if they are smaller
            while (s.size() && n >= t[s.top()]) s.pop();
            // if we still have something in the stack, we update res
            if (s.size()) res[i] = s.top() - i;
            // updating the stack
            s.push(i);
        }
        return res;*/
        int n = T.size();
	stack<int> s;
	vector<int> ans(n, 0);
	for (int i = 0; i < n; ++i) {
		while (!s.empty() and T[s.top()] < T[i]) {
			int j = s.top(); s.pop();
			ans[j] = i - j;
		}
		s.push(i);
	}
	return ans;
    }
};
